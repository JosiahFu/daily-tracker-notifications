# This is a basic workflow to help you get started with Actions

name: Build and Deploy - Release

# Controls when the workflow will run
on:
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install Packages
        run: npm install

      - name: Compile
        run: tsc
      
      - name: Compress Build
        if: always()
        run: |
          cp src/appsscript.json build/appsscript.json
          zip -r build build
      
      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: archived-build
          path: build.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: archived-build
      
      - name: Decompress Build
        run: unzip build.zip

      - name: Clasp Push
        # You may pin to the exact commit or the version.
        uses: JosiahFu/clasp-action@v1.2.1
        with:
          # access_token written in .clasprc.json
          accessToken: ${{ secrets.ACCESS_TOKEN }}
          # id_token written in .clasprc.json
          idToken: ${{ secrets.ID_TOKEN }}
          # refresh_token written in .clasprc.json
          refreshToken: ${{ secrets.REFRESH_TOKEN }}
          # clientId written in .clasprc.json
          clientId: ${{ secrets.CLIENT_ID }}
          # clientSecret written in .clasprc.json
          clientSecret: ${{ secrets.CLIENT_SECRET }}
          # scriptId written in .clasp.json
          scriptId: ${{ secrets.SCRIPT_ID_MAIN }}
          # Directory where scripts are stored
          rootDir: 'build'
          # Command to execute(push or deploy)
          command: 'deploy'
          description: '${{ github.event.release.name }}'
